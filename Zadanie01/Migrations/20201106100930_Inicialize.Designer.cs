// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Zadanie01.Database;

namespace PobieranieDanychZBazy.Migrations
{
    [DbContext(typeof(TestContext))]
    [Migration("20201106100930_Inicialize")]
    partial class Inicialize
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Zadanie01.Database.Korespondencja", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DataWysylki")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Korespondencje");

                    b.HasData(
                        new
                        {
                            Id = "k1",
                            DataWysylki = new DateTime(2020, 6, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = "k2",
                            DataWysylki = new DateTime(2020, 6, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Zadanie01.Database.KorespondencjaPisma", b =>
                {
                    b.Property<string>("IdKorespondencja")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdPismo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.HasKey("IdKorespondencja", "IdPismo");

                    b.HasIndex("IdPismo");

                    b.ToTable("KorespondencjePisma");

                    b.HasData(
                        new
                        {
                            IdKorespondencja = "k1",
                            IdPismo = "p1",
                            Id = 1L
                        },
                        new
                        {
                            IdKorespondencja = "k1",
                            IdPismo = "p3",
                            Id = 2L
                        },
                        new
                        {
                            IdKorespondencja = "k2",
                            IdPismo = "p2",
                            Id = 3L
                        });
                });

            modelBuilder.Entity("Zadanie01.Database.Pismo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nazwa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Priorytet")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Pisma");

                    b.HasData(
                        new
                        {
                            Id = "p1",
                            Nazwa = "Pismo 1",
                            Numer = "1/2020",
                            Priorytet = false
                        },
                        new
                        {
                            Id = "p2",
                            Nazwa = "Pismo 2",
                            Numer = "2/2020",
                            Priorytet = false
                        },
                        new
                        {
                            Id = "p3",
                            Nazwa = "Pismo 3",
                            Numer = "3/2020",
                            Priorytet = true
                        },
                        new
                        {
                            Id = "p4",
                            Nazwa = "Pismo 4",
                            Numer = "4/2020",
                            Priorytet = true
                        });
                });

            modelBuilder.Entity("Zadanie01.Database.KorespondencjaPisma", b =>
                {
                    b.HasOne("Zadanie01.Database.Korespondencja", "Korespondencja")
                        .WithMany("KorespondencjePisma")
                        .HasForeignKey("IdKorespondencja")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Zadanie01.Database.Pismo", "Pismo")
                        .WithMany("KorespondencjePisma")
                        .HasForeignKey("IdPismo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
